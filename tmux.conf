#  _                                          __ 
# | |_ _ __ ___  _   ___  __  ___ ___  _ __  / _|
# | __| '_ ` _ \| | | \ \/ / / __/ _ \| '_ \| |_ 
# | |_| | | | | | |_| |>  < | (_| (_) | | | |  _|
#(_)__|_| |_| |_|\__,_/_/\_(_)___\___/|_| |_|_|  
# Config for Tmux (c) Lukasz Grzegorz Maciak    

# General:
# C-s           Prefix
# C-s   r       Source .tmux.conf
# C-s   ?       Show key bindings
# C-s   t       Show time
#
# Sessions:
# C-s   s       List sessions
# C-s   $       Rename session
#
# Windows:
# C-s   c       Create window
# C-s   w       List windows
# C-s   f       Find window
# C-s   ,       Rename window
# C-s   &       Kill window
#
# Panes (splits):
# C-s   |       Vertical split
# C-s   -       Horizontal split
# C-s   o       Jump between panes
# C-s   q       Show pane numbers (type number to jump)
# C-s   x       Kill pane
# C-s   !       Break pane out into a window
# C-s   j       Create pane from an existing window
# C-s   arrow   Move between panes

# replace C-b with C-s for the prefix key
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

# easy reloading of the .tmux.conf configuration file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# use vim key bindings
setw -g mode-keys vi

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# number windows starting at 1 (default => 0)
set-option -g base-index 1

# renumber as windows are added / removed
set-option -g renumber-windows on

# enable 256 colors mode - important if you want the solarized theme look
# semi-decent in vim
set -g default-terminal "screen-256color"

# Make Vim responsive to esc
set -s escape-time 0

# Keep plenty of history for scrollback
set -g history-limit 10000

# enable mouse on
# setw -g mode-mouse on
# set -g mouse-utf8 on
set -g mouse on
bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
bind -n WheelDownPane select-pane -t= \;                 send-keys -M

# seamless aviation using vim-tmux-navigator (github christoomey/vim-tmux-navigator)
# see this blog post for additional detail:
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Provide access to the clipboard for pbpaste, pbcopy (details: http://goo.gl/DN82E)
set-option -g default-command "reattach-to-user-namespace -l zsh"
set-window-option -g automatic-rename on

# copy with 'enter' or 'y' and send to mac os clipboard: http://goo.gl/2Bfn8
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# restore clear screen keybind mapped over by tmux-navigator
bind C-l send-keys C-l

# allow the session name in status left to display up to 50 characters
set-option -g status-left-length 50

# enable UTF-8 support in status bar
# set -g status-utf8 on

# set refresh interval for status bar
set -g status-interval 30

# center the status bar
set -g status-justify left

# color status bar
# set -g status-bg colour235
# set -g status-fg white

# Right side of status bar
#  %a - weekday in the [Sun] format
#  %l:%M %p - time in the [HH:MM AM/PM] format
set-option -g status-right " #(battery -t -g black)  #(date '+%a %l:%M %p') "

# more intuitive pane splitting key-bindings, open all in current path
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# easy resizing of panes with fine and coarse adjustment
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

unbind ^T
bind ^T split-window -p 25

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# highlight the current window in the status bar (blue background)
#  #I - window index
#  #W - window title
#  #F - window flag
set-window-option -g window-status-current-format '#[bg=blue,fg=cyan,bold]#I#[bg=blue,fg=cyan]:#[fg=white]#W#[fg=dim]#F'

# Smart pane switching with awareness of vim splits
# See this blog post for additional detail:
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
