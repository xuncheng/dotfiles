#-------------------------------------------------------------------------------
#   TMUX CONFIG
#-------------------------------------------------------------------------------
# NOTE: this overrides specify terminal capabilities you are overriding within tmux,
# this should "normally" be "xterm-256color" or "tmux-256color" but in the case of
# kitty it should be "xterm-kitty" so the solution/workaround here is to use the
# value of $TERM. This might not work for all terminals.
# see:
# https://jdhao.github.io/2018/10/19/tmux_nvim_true_color/
# https://sw.kovidgoyal.net/kitty/conf/#opt-kitty.term
set -g default-terminal "${TERM}"
set -as terminal-features ",${TERM}:RGB"
#-------------------------------------------------------------------------------
#  Terminal settings {{{1
#-------------------------------------------------------------------------------
# -> https://github.com/alacritty/alacritty/issues/1628
# References:
#   * https://github.com/neovim/neovim/pull/9097
#   * https://github.com/tmux/tmux/issues/1492
# Allow undercurls for terminals that support them.
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# Allow coloured undercurls for terminals that support them.
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
# }}}

#-------------------------------------------------------------------------------
#  Prefix {{{1
#-------------------------------------------------------------------------------
set-option -g prefix C-s
unbind-key C-b
bind-key C-s send-prefix

set-option  -g history-limit 100000
set-option  -g renumber-windows on

set -g escape-time 0          # zero-out escape time delay

bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display "Reloaded!"

#unbind z # unbind default zoom
#bind Space resize-pane -Z
## }}}
##-------------------------------------------------------------------------------
##  Display {{{1
##-------------------------------------------------------------------------------
#set-option    -g set-titles on
#set-option    -g set-titles-string '❐ #S ● #I'
#set-option    -g allow-rename on
#set-option    -g pane-base-index 1
set-option    -g base-index 1 # start indexing windows at 1 instead of 0
#set-option    -g monitor-activity on
#set-option   -sg repeat-time 600
#set-option    -g display-time 1000
set-option    -g status-interval 5 # update status every 5 seconds
#set-option   -wg automatic-rename on
#set-option    -g automatic-rename-format '#{b:pane_current_path}'
#set-option    -g monitor-activity on
#set-option    -g visual-activity off
## Disable tmux statusline on zooming into a pane
## @see https://gist.github.com/bartj3/6d3bd8efd2ceaf02d443
## set-hook -g after-resize-pane "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"set -g status off\" \"set -g status on\""
## }}}
#-------------------------------------------------------------------------------
#  Navigation {{{1
#-------------------------------------------------------------------------------
set-option -g mouse on

#bind C-f command-prompt -p find-session 'switch-client -t %%' # find session
#bind-key C-j display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

bind '\' split-window -h -c '#{?pane_path,#{pane_path},#{pane_current_path}}'
bind - split-window -v -c '#{?pane_path,#{pane_path},#{pane_current_path}}'
#unbind '"'
#unbind %

unbind ^T
bind ^T split-window -p 30 -c '#{?pane_path,#{pane_path},#{pane_current_path}}'

setw -g mode-keys vi # set vi mode for copy mode
# more settings to make copy-mode more vim-like
bind Escape copy-mode
# setup 'v' to begin selection as in Vim
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi v send-keys   -X begin-selection
bind-key -T copy-mode-vi c-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys   -X copy-selection
if-shell '[[ $(uname -s) = Linux ]]' {
   bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
} {
   bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
}


## Synchronize all panes in a window
#bind y setw synchronize-panes
## easier and faster switching between next/prev window
#bind p previous-window
#bind n next-window

## detach client
#bind-key d detach
#bind-key C-d detach

## Cycle to next pane
#bind-key -r Tab select-pane -t :.+

## previous window
#bind-key BSpace previous-window

## swap panes
#bind-key -r J swap-pane -D
#bind-key -r K swap-pane -U

#unbind -T copy-mode-vi MouseDragEnd1Pane

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# }}}
##-------------------------------------------------------------------------------
##  Status Bar {{{1
##-------------------------------------------------------------------------------
#bind-key b set-option status

INACTIVE_FG_COLOR='#5c6370'
ACTIVE_FG_COLOR='#fac863'

set-option -g status on
set-option -g status-position top
set-option -g status-style fg=terminal
set-option -g status-style bg=terminal
set-option -g status-justify centre
set-option -g status-interval 1

set -g status-left-length  80
# Options -> ⧉ ❐
set -g status-left "#{?client_prefix,#[fg=#ffffff bg=#22252B],#[fg=#e5c07b,bold]} ❐ #S "
set -g status-right ""

#  #I - window index
#  #W - window title
#  #F - window flag
set-window-option -g window-status-style fg=$INACTIVE_FG_COLOR
set-window-option -g window-status-current-style fg=white
set-window-option -g window-status-current-format " #I. #[bold,italics]#W"
set-window-option -g window-status-format " #I. #[italics]#W"
set-window-option -g window-status-activity-style none # defaults to reverse
set-window-option -g window-status-separator "#[fg=$INACTIVE_FG_COLOR]"

# tmux commandline styling
set-option -g message-style fg=yellow,bg=terminal,bold
# styling when in command mode i.e. vi or emacs mode in tmux command line
set-option -g message-command-style fg=green,bg=terminal,bold,blink
# styling for the search indicator
set-option -g mode-style bg=terminal,fg=brightgreen,bold
# }}}

#-------------------------------------------------------------------------------
#  Pane border {{{1
#-------------------------------------------------------------------------------
set-option        -g pane-active-border-style fg=colour51
set-option        -g pane-border-style        fg='#343d46'
# }}}

##-------------------------------------------------------------------------------
## #  Plugins {{{1
## #-------------------------------------------------------------------------------
## # TODO:
## # - Find an alternative to kitty hints kitten in tmux
## #
## #-------------------------------------------------------------------------------
## set -g @plugin 'tmux-plugins/tpm'
## set -g @plugin 'tmux-plugins/tmux-sessionist'
## #-------------------------------------------------------------------------------
## # Saves and restores tmux sessions beyond system crashes and restarts
## set -g @plugin 'tmux-plugins/tmux-resurrect'
## # Auto saves tmux environment and keeps tmux running
## set -g @plugin 'tmux-plugins/tmux-continuum'
## set -g @continuum-restore 'on'
## set -g @resurrect-strategy-nvim 'session'
## #-------------------------------------------------------------------------------
## # Adds better bindings for switching windows,panes & resizing
## set -g @plugin 'tmux-plugins/tmux-pain-control'
## set-option -g @pane_resize "10"
## #-------------------------------------------------------------------------------
## set -g @plugin 'tmux-plugins/tmux-battery'
## set -g @plugin 'nhdaly/tmux-better-mouse-mode'
## #-------------------------------------------------------------------------------
## set -g @plugin 'tmux-plugins/tmux-open'
## run-shell ~/.tmux/plugins/tpm/tpm
## # }}}
## #-----------------------------------------------------------------------------

## vim:foldmethod=marker ft=tmux
